<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cc.wsapps.common.mapper.SequenceMapper">
  <resultMap id="BaseResultMap" type="cc.wsapps.common.entity.Sequence">
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="CODE" jdbcType="VARCHAR" property="code" />
    <result column="MODULE_CODE" jdbcType="VARCHAR" property="moduleCode" />
    <result column="MIN" jdbcType="BIGINT" property="min" />
    <result column="MAX" jdbcType="BIGINT" property="max" />
    <result column="CURRENT" jdbcType="BIGINT" property="current" />
    <result column="CYCLE" jdbcType="INTEGER" property="cycle" />
    <result column="PREFIX" jdbcType="VARCHAR" property="prefix" />
    <result column="LENGTH" jdbcType="INTEGER" property="length" />
    <result column="PADDING" jdbcType="INTEGER" property="padding" />
    <result column="PADDINGCHAR" jdbcType="CHAR" property="paddingchar" />
    <result column="STEP" jdbcType="INTEGER" property="step" />
    <result column="SUBSCRIPTIONS" jdbcType="INTEGER" property="subscriptions" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, CODE, MODULE_CODE, MIN, MAX, CURRENT, CYCLE, PREFIX, LENGTH, PADDING, PADDINGCHAR, 
    STEP, SUBSCRIPTIONS
  </sql>
  <select id="selectByExample" parameterType="cc.wsapps.common.example.SequenceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from T_COMMON_SEQUENCE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="paginator != null and paginator.offset != null and paginator.itemsPerPage != null">
      LIMIT #{paginator.offset,jdbcType=INTEGER},#{paginator.itemsPerPage,jdbcType=INTEGER}
    </if>
  </select>
  <select id="selectByExamplePage" parameterType="cc.wsapps.common.example.SequenceExamplePage" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from T_COMMON_SEQUENCE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    LIMIT #{paginator.offset,jdbcType=INTEGER},#{paginator.itemsPerPage,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from T_COMMON_SEQUENCE
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from T_COMMON_SEQUENCE
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cc.wsapps.common.example.SequenceExample">
    delete from T_COMMON_SEQUENCE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cc.wsapps.common.entity.Sequence">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into T_COMMON_SEQUENCE (CODE, MODULE_CODE, MIN, 
      MAX, CURRENT, CYCLE, 
      PREFIX, LENGTH, PADDING, 
      PADDINGCHAR, STEP, SUBSCRIPTIONS
      )
    values (#{code,jdbcType=VARCHAR}, #{moduleCode,jdbcType=VARCHAR}, #{min,jdbcType=BIGINT}, 
      #{max,jdbcType=BIGINT}, #{current,jdbcType=BIGINT}, #{cycle,jdbcType=INTEGER}, 
      #{prefix,jdbcType=VARCHAR}, #{length,jdbcType=INTEGER}, #{padding,jdbcType=INTEGER}, 
      #{paddingchar,jdbcType=CHAR}, #{step,jdbcType=INTEGER}, #{subscriptions,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cc.wsapps.common.entity.Sequence">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into T_COMMON_SEQUENCE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="code != null">
        CODE,
      </if>
      <if test="moduleCode != null">
        MODULE_CODE,
      </if>
      <if test="min != null">
        MIN,
      </if>
      <if test="max != null">
        MAX,
      </if>
      <if test="current != null">
        CURRENT,
      </if>
      <if test="cycle != null">
        CYCLE,
      </if>
      <if test="prefix != null">
        PREFIX,
      </if>
      <if test="length != null">
        LENGTH,
      </if>
      <if test="padding != null">
        PADDING,
      </if>
      <if test="paddingchar != null">
        PADDINGCHAR,
      </if>
      <if test="step != null">
        STEP,
      </if>
      <if test="subscriptions != null">
        SUBSCRIPTIONS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="moduleCode != null">
        #{moduleCode,jdbcType=VARCHAR},
      </if>
      <if test="min != null">
        #{min,jdbcType=BIGINT},
      </if>
      <if test="max != null">
        #{max,jdbcType=BIGINT},
      </if>
      <if test="current != null">
        #{current,jdbcType=BIGINT},
      </if>
      <if test="cycle != null">
        #{cycle,jdbcType=INTEGER},
      </if>
      <if test="prefix != null">
        #{prefix,jdbcType=VARCHAR},
      </if>
      <if test="length != null">
        #{length,jdbcType=INTEGER},
      </if>
      <if test="padding != null">
        #{padding,jdbcType=INTEGER},
      </if>
      <if test="paddingchar != null">
        #{paddingchar,jdbcType=CHAR},
      </if>
      <if test="step != null">
        #{step,jdbcType=INTEGER},
      </if>
      <if test="subscriptions != null">
        #{subscriptions,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cc.wsapps.common.example.SequenceExample" resultType="java.lang.Long">
    select count(*) from T_COMMON_SEQUENCE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update T_COMMON_SEQUENCE
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.code != null">
        CODE = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.moduleCode != null">
        MODULE_CODE = #{record.moduleCode,jdbcType=VARCHAR},
      </if>
      <if test="record.min != null">
        MIN = #{record.min,jdbcType=BIGINT},
      </if>
      <if test="record.max != null">
        MAX = #{record.max,jdbcType=BIGINT},
      </if>
      <if test="record.current != null">
        CURRENT = #{record.current,jdbcType=BIGINT},
      </if>
      <if test="record.cycle != null">
        CYCLE = #{record.cycle,jdbcType=INTEGER},
      </if>
      <if test="record.prefix != null">
        PREFIX = #{record.prefix,jdbcType=VARCHAR},
      </if>
      <if test="record.length != null">
        LENGTH = #{record.length,jdbcType=INTEGER},
      </if>
      <if test="record.padding != null">
        PADDING = #{record.padding,jdbcType=INTEGER},
      </if>
      <if test="record.paddingchar != null">
        PADDINGCHAR = #{record.paddingchar,jdbcType=CHAR},
      </if>
      <if test="record.step != null">
        STEP = #{record.step,jdbcType=INTEGER},
      </if>
      <if test="record.subscriptions != null">
        SUBSCRIPTIONS = #{record.subscriptions,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update T_COMMON_SEQUENCE
    set ID = #{record.id,jdbcType=BIGINT},
      CODE = #{record.code,jdbcType=VARCHAR},
      MODULE_CODE = #{record.moduleCode,jdbcType=VARCHAR},
      MIN = #{record.min,jdbcType=BIGINT},
      MAX = #{record.max,jdbcType=BIGINT},
      CURRENT = #{record.current,jdbcType=BIGINT},
      CYCLE = #{record.cycle,jdbcType=INTEGER},
      PREFIX = #{record.prefix,jdbcType=VARCHAR},
      LENGTH = #{record.length,jdbcType=INTEGER},
      PADDING = #{record.padding,jdbcType=INTEGER},
      PADDINGCHAR = #{record.paddingchar,jdbcType=CHAR},
      STEP = #{record.step,jdbcType=INTEGER},
      SUBSCRIPTIONS = #{record.subscriptions,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cc.wsapps.common.entity.Sequence">
    update T_COMMON_SEQUENCE
    <set>
      <if test="code != null">
        CODE = #{code,jdbcType=VARCHAR},
      </if>
      <if test="moduleCode != null">
        MODULE_CODE = #{moduleCode,jdbcType=VARCHAR},
      </if>
      <if test="min != null">
        MIN = #{min,jdbcType=BIGINT},
      </if>
      <if test="max != null">
        MAX = #{max,jdbcType=BIGINT},
      </if>
      <if test="current != null">
        CURRENT = #{current,jdbcType=BIGINT},
      </if>
      <if test="cycle != null">
        CYCLE = #{cycle,jdbcType=INTEGER},
      </if>
      <if test="prefix != null">
        PREFIX = #{prefix,jdbcType=VARCHAR},
      </if>
      <if test="length != null">
        LENGTH = #{length,jdbcType=INTEGER},
      </if>
      <if test="padding != null">
        PADDING = #{padding,jdbcType=INTEGER},
      </if>
      <if test="paddingchar != null">
        PADDINGCHAR = #{paddingchar,jdbcType=CHAR},
      </if>
      <if test="step != null">
        STEP = #{step,jdbcType=INTEGER},
      </if>
      <if test="subscriptions != null">
        SUBSCRIPTIONS = #{subscriptions,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cc.wsapps.common.entity.Sequence">
    update T_COMMON_SEQUENCE
    set CODE = #{code,jdbcType=VARCHAR},
      MODULE_CODE = #{moduleCode,jdbcType=VARCHAR},
      MIN = #{min,jdbcType=BIGINT},
      MAX = #{max,jdbcType=BIGINT},
      CURRENT = #{current,jdbcType=BIGINT},
      CYCLE = #{cycle,jdbcType=INTEGER},
      PREFIX = #{prefix,jdbcType=VARCHAR},
      LENGTH = #{length,jdbcType=INTEGER},
      PADDING = #{padding,jdbcType=INTEGER},
      PADDINGCHAR = #{paddingchar,jdbcType=CHAR},
      STEP = #{step,jdbcType=INTEGER},
      SUBSCRIPTIONS = #{subscriptions,jdbcType=INTEGER}
    where ID = #{id,jdbcType=BIGINT}
  </update>
</mapper>